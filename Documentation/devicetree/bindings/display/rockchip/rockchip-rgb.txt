Rockchip RGB interface
================================

Required properties:
- compatible: matching the soc type:
	- "rockchip,px30-rgb";
	- "rockchip,rk1808-rgb";
	- "rockchip,rk3066-rgb";
	- "rockchip,rk3128-rgb";
	- "rockchip,rk3288-rgb";
	- "rockchip,rk3308-rgb";
	- "rockchip,rk3368-rgb";
	- "rockchip,rv1108-rgb";

Optional properties:
- phys : phandle for the PHY device
- phy-names : should be "phy"
- pinctrl-names: the pin control state names; should contain "default"
- pinctrl-0: the default pinctrl state (active)
- pinctrl-1: the "sleep" pinctrl state
- rockchip,data-sync: boolean to enable data sync

The rgb has two video ports described by:
	Documentation/devicetree/bindings/media/video-interfaces.txt
Their connections are modeled using the OF graph bindings specified in
	Documentation/devicetree/bindings/graph.txt.

<<<<<<< HEAD
- video port 0 for the VOP input
- video port 1 for either a panel or bridge

Example:

&grf {
=======
- video port 0 for the VOP input, the remote endpoint maybe vopb/vopl/vop
- video port 1 for either a panel or subsequent encoder

the panel described by:
	Documentation/devicetree/bindings/display/panel/simple-panel.txt
Panel other required properties:
- ports for remote rgb output.

Example:

panel: panel {
	compatible = "auo,b101ean01";
	enable-gpios = <&gpio7 21 GPIO_ACTIVE_HIGH>;
	bus-format = <MEDIA_BUS_FMT_RGB888_1X24>;

	ports {
		panel_in_rgb: endpoint {
			remote-endpoint = <&rgb_out_panel>;
		};
	};
};

For Rockchip RV1108:

	rgb: rgb {
		compatible = "rockchip,rk3288-rgb";
		pinctrl-names = "default", "sleep";
		pinctrl-0 = <&lcdc_rgb_pins>;
		pinctrl-1 = <&lcdc_sleep_pins>;
		phys = <&video_phy>;
		phy-names = "phy";
		status = "disabled";

		ports {
			#address-cells = <1>;
			#size-cells = <0>;

			port@0 {
				reg = <0>;
				#address-cells = <1>;
				#size-cells = <0>;

				rgb_in_vopb: endpoint@0 {
					reg = <0>;
					remote-endpoint = <&vopb_out_rgb>;
				};

				rgb_in_vopl: endpoint@1 {
					reg = <1>;
					remote-endpoint = <&vopl_out_rgb>;
				};
			};
		};
	};
};
